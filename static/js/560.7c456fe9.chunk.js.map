{"version":3,"file":"static/js/560.7c456fe9.chunk.js","mappings":"+IAaA,UAVgB,SAACA,GACb,OACI,iBAAKC,QAAW,SAACC,GAA2B,OAApBA,EAAEC,kBAAyBH,EAAMC,SAAQ,EAAKD,EAAMI,KAAKJ,EAAMK,MAClFC,UAAU,gBADf,WAEI,eAAIA,UAAY,oCAAhB,SAAqDN,EAAMI,QAC3D,SAAC,IAAD,CAAaG,UAAU,cAAcF,IAAOL,EAAMK,W,kFCM9D,EAXoB,SAACL,GAEjB,MCFwB,SAACO,GACzB,IAAMC,GAAWC,EAAAA,EAAAA,UACjB,GAA6BC,EAAAA,EAAAA,WAAS,GAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA6BF,EAAAA,EAAAA,UAAS,CAACH,IAAvC,eAAOM,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACHP,IACCA,EAASQ,QAAQC,OAAS,WACtBL,GAAU,OAGpB,KAEFG,EAAAA,EAAAA,YAAU,WACND,EAAW,CAACP,EAAD,UAAcA,EAAd,gBACb,CAACI,IAGI,CAACH,SAAAA,EAASK,QAAAA,GDhBUK,CAAalB,EAAMO,WAAvCC,EAAP,EAAOA,SAASK,EAAhB,EAAgBA,QAEhB,OACI,gBAAKP,UAAU,kBAAf,UACI,gBAAKa,IAAOX,EAAUF,UAAWO,EAAQO,KAAK,KAAMC,IAAOrB,EAAMK,IAAKiB,IAAM","sources":["components/pages/news/Article.jsx","components/pages/news/LoadedImage.jsx","components/hooks/useLoadImage.js"],"sourcesContent":["import React from 'react';\r\nimport LoadedImage from \"./LoadedImage\";\r\n\r\nconst Article = (props) => {\r\n    return (\r\n        <div onClick = {(e) => {e.stopPropagation();return props.onClick(true,props.name,props.img)}}\r\n             className=\"news__article\">\r\n            <h1 className = \"article-title news__article-title\">{props.name}</h1>\r\n            <LoadedImage classname=\"news__image\" img = {props.img}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Article;","import React/*, {useEffect, useRef, useState}*/ from 'react';\r\nimport {useLoadImage} from \"../../hooks/useLoadImage\";\r\n\r\nconst LoadedImage = (props) => {\r\n\r\n    const {imageRef,classes} = useLoadImage(props.classname)\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            <img ref = {imageRef} className={classes.join(' ')} src = {props.img} alt = \"article-picture\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadedImage;","import {useEffect,useState,useRef} from \"react\";\r\n\r\n\r\nexport const useLoadImage = (classname) => {\r\n    const imageRef = useRef()\r\n    const [isLoaded,setLoaded] = useState(false)\r\n    const [classes,setClasses] = useState([classname])\r\n\r\n    useEffect(() => {\r\n        if(imageRef){\r\n            imageRef.current.onload = () =>{\r\n                setLoaded(true)\r\n            }\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setClasses([classname,`${classname}--loaded`])\r\n    },[isLoaded])\r\n\r\n\r\n    return {imageRef,classes}\r\n}"],"names":["props","onClick","e","stopPropagation","name","img","className","classname","imageRef","useRef","useState","isLoaded","setLoaded","classes","setClasses","useEffect","current","onload","useLoadImage","ref","join","src","alt"],"sourceRoot":""}