{"version":3,"file":"static/js/747.3f4a027e.chunk.js","mappings":"6KAeA,EAbkB,SAACA,GACf,OACI,iBAAKC,UAAY,uCAAjB,WACI,iBAAKA,UAAY,qBAAjB,WACI,eAAIA,UAAY,mBAAhB,SAAoCD,EAAME,QAC1C,eAAID,UAAY,mBAAhB,SAAoCD,EAAMG,QAC1C,cAAGF,UAAU,mBAAb,SAAiCD,EAAMI,WAE3C,gBAAKH,UAAU,0BAA0BI,IAAKL,EAAMM,MAAuBC,IAAI,cAAdP,EAAMQ,Q,QC+BnF,EArCiB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,OAAOC,EAAuB,EAAvBA,KAAKP,EAAkB,EAAlBA,KAAKQ,EAAa,EAAbA,QAGhC,OACI,iCACA,iBAAKA,QAAW,SAAAC,GAAO,OAAOD,EAAQC,IAAKX,UAAU,eAArD,WACI,gBAAKA,UAAU,YAAf,UACI,SAACY,EAAA,EAAD,CAAaC,UAAY,mBAAmBC,IAAOL,OAEvD,eAAIT,UAAY,sCAAhB,SAAuDE,KACvD,gBAAKF,UAAU,cAAf,SACKQ,EAAOO,KAAI,SAACV,GAAD,OACR,gBAAKL,UAAU,2BAA2BI,IAAKC,EAAMW,YAA+BV,IAAI,cAAhBD,EAAMY,eAI1F,iBAAKjB,UAAY,gBAAjB,WACI,SAAC,EAAD,CAAWK,MAAOG,EAAO,GAAGQ,YACjBT,GAAI,EACJL,KAAQ,aACRD,KAAQ,QACRE,KAAQ,6BACnB,SAAC,EAAD,CAAWE,MAAOG,EAAO,GAAGQ,YACjBT,GAAI,EACJL,KAAQ,aACRD,KAAQ,YACRE,KAAQ,6BACnB,SAAC,EAAD,CAAWE,MAAOG,EAAO,GAAGQ,YACjBT,GAAI,EACJL,KAAQ,aACRD,KAAQ,WACRE,KAAQ,oC,kFCrB/B,EAXoB,SAACJ,GAEjB,MCFwB,SAACc,GACzB,IAAMK,GAAWC,EAAAA,EAAAA,UACjB,GAA6BC,EAAAA,EAAAA,WAAS,GAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA6BF,EAAAA,EAAAA,UAAS,CAACP,IAAvC,eAAOU,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACHP,IACCA,EAASQ,QAAQC,OAAS,WACtBL,GAAU,OAGpB,KAEFG,EAAAA,EAAAA,YAAU,WACND,EAAW,CAACX,EAAD,UAAcA,EAAd,gBACb,CAACQ,IAGI,CAACH,SAAAA,EAASK,QAAAA,GDhBUK,CAAa7B,EAAMc,WAAvCK,EAAP,EAAOA,SAASK,EAAhB,EAAgBA,QAEhB,OACI,gBAAKvB,UAAU,kBAAf,UACI,gBAAK6B,IAAOX,EAAUlB,UAAWuB,EAAQO,KAAK,KAAM1B,IAAOL,EAAMe,IAAKR,IAAM","sources":["components/pages/champions/SpellCard.jsx","components/pages/champions/HeroCard.jsx","components/pages/news/LoadedImage.jsx","components/hooks/useLoadImage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst SpellCard = (props) => {\r\n    return (\r\n        <div className = \"spell-card spellinfo-bar__spell-card\">\r\n            <div className = \"spell__description\">\r\n                <h1 className = \"spell-card__type\">{props.type}</h1>\r\n                <h2 className = \"spell-card__name\">{props.name}</h2>\r\n                <p className=\"spell-card__info\">{props.info}</p>\r\n            </div>\r\n            <img className='spell spell-card__spell' src={props.spell} key ={props.id} alt='hero-spell'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpellCard;","import React from 'react';\r\nimport SpellCard from \"./SpellCard\";\r\nimport LoadedImage from \"../news/LoadedImage\";\r\n\r\nconst HeroCard = ({spells,hero,name,onClick}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n        <div onClick = {e => { return onClick(e)}} className='hero-wrapper'>\r\n            <div className=\"hero-card\">\r\n                <LoadedImage classname = 'hero-card__image' img = {hero}/>\r\n            </div>\r\n            <h1 className = \"hero-title hero-wrapper__hero-title\">{name}</h1>\r\n            <div className=\"spell-board\">\r\n                {spells.map((spell)=>\r\n                    <img className='spell spell-board__spell' src={spell.displayIcon} key ={spell.slot} alt='hero-spell'/>\r\n                )}\r\n            </div>\r\n        </div>\r\n        <div className = 'spellinfo-bar'>\r\n            <SpellCard spell={spells[0].displayIcon}\r\n                       id={1}\r\n                       name = {'spell name'}\r\n                       type = {'BASIC'}\r\n                       info = {'Info about this ability'}/>\r\n            <SpellCard spell={spells[2].displayIcon}\r\n                       id={2}\r\n                       name = {'spell name'}\r\n                       type = {'SIGNATURE'}\r\n                       info = {'Info about this ability'}/>\r\n            <SpellCard spell={spells[3].displayIcon}\r\n                       id={3}\r\n                       name = {'spell name'}\r\n                       type = {'ULTIMATE'}\r\n                       info = {'Info about this ability'}/>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HeroCard;","import React/*, {useEffect, useRef, useState}*/ from 'react';\r\nimport {useLoadImage} from \"../../hooks/useLoadImage\";\r\n\r\nconst LoadedImage = (props) => {\r\n\r\n    const {imageRef,classes} = useLoadImage(props.classname)\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            <img ref = {imageRef} className={classes.join(' ')} src = {props.img} alt = \"article-picture\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadedImage;","import {useEffect,useState,useRef} from \"react\";\r\n\r\n\r\nexport const useLoadImage = (classname) => {\r\n    const imageRef = useRef()\r\n    const [isLoaded,setLoaded] = useState(false)\r\n    const [classes,setClasses] = useState([classname])\r\n\r\n    useEffect(() => {\r\n        if(imageRef){\r\n            imageRef.current.onload = () =>{\r\n                setLoaded(true)\r\n            }\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setClasses([classname,`${classname}--loaded`])\r\n    },[isLoaded])\r\n\r\n\r\n    return {imageRef,classes}\r\n}"],"names":["props","className","type","name","info","src","spell","alt","id","spells","hero","onClick","e","LoadedImage","classname","img","map","displayIcon","slot","imageRef","useRef","useState","isLoaded","setLoaded","classes","setClasses","useEffect","current","onload","useLoadImage","ref","join"],"sourceRoot":""}